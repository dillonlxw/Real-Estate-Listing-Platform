spring.application.name=RealEstateApp

# Enable Docker Compose integration for development
# This will tell Spring Boot to look for compose.yaml and manage the service
spring.docker.compose.enabled=true
spring.docker.compose.lifecycle-management=START_AND_STOP

# Datasource Properties (Spring Boot will infer these from Docker Compose if service connection is used,
# but it's good to have them explicitly for clarity or if not using service connection directly)
# These should match your compose.yaml environment variables for MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=myuser
spring.datasource.password=secret
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Properties
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Explicitly enable SQL script initialization for non-embedded databases
spring.sql.init.mode=always
# Defer data.sql execution until after Hibernate's DDL auto-generation
spring.jpa.defer-datasource-initialization=true
